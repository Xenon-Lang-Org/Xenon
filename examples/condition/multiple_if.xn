fn doelif(a: i32) -> i32
{
    if (a > 10)
    {
        return 1;
    }
    elif (a > 5)
    {
        return 2;
    }
    else
    {
        return 0;
    }
}

// TEST "doelif" IN "8" OUT "2"
// TEST "doelif" IN "12" OUT "1"
// TEST "doelif" IN "5" OUT "0"

fn forest(a: i32) -> i32
{
    if (a == 1)
    {
        return 1;
    }
    elif (a == 2)
    {
        return 2;
    }
    elif (a == 3)
    {
        return 3;
    }
    elif (a == 4)
    {
        return 4;
    }
    else
    {
        return 0;
    }
}

// TEST "forest" IN "1" OUT "1"
// TEST "forest" IN "2" OUT "2"
// TEST "forest" IN "3" OUT "3"
// TEST "forest" IN "4" OUT "4"
// TEST "forest" IN "5" OUT "0"

fn supegal(a: i32) -> i32
{
    if (a >= 10)
    {
        return 1;
    }
    return 0;
}

// TEST "supegal" IN "10" OUT "1"
// TEST "supegal" IN "5" OUT "0"

fn infegal(a: i32) -> i32
{
    if (a <= 10)
    {
        return 1;
    }
    return 0;
}

// TEST "infegal" IN "10" OUT "1"
// TEST "infegal" IN "15" OUT "0"
