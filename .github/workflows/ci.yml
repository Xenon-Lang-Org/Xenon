name: contact

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout GLaDOS Repository
        uses: actions/checkout@v4

      - name: Checkout CI/CD Repository
        uses: actions/checkout@v4
        with:
          repository: xenon-lang-org/glados-image
          path: .github/workflows/docker-build.yml

      - name: Set lowercase repository name
        run: |
          echo "REPO_LOWERCASE=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ env.REPO_LOWERCASE }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=sha

      - name: Build and push Dev image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.dev
          push: true
          tags: |
            ghcr.io/${{ env.REPO_LOWERCASE }}-dev:latest
            ghcr.io/${{ env.REPO_LOWERCASE }}-dev:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Production image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.REPO_LOWERCASE }}:latest
            ghcr.io/${{ env.REPO_LOWERCASE }}:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max